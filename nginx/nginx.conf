    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl;
        http2 on;
        listen [::]:443 ssl;
        server_name example.local;
    
        ssl_certificate /var/certificates/nginx.crt;
        ssl_certificate_key /var/certificates/nginx.key;
        ssl_dhparam /var/certificates/dhparam.pem;
        ssl_protocols  TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1; # Requiere nginx >= 1.1.0
        ssl_session_timeout 2m;
        ssl_session_cache shared:SSL:2m;
        ssl_session_tickets off; # Requiere nginx >= 1.5.9
        ssl_stapling on; # Requiere nginx >= 1.3.7
        ssl_stapling_verify on; # Requiere nginx => 1.3.7
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
        root   /usr/share/nginx/html;
        index  index.html;
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
          
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-forward-for $proxy_add_x_forwarded_for;

        try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
        }

        location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }

    }
    


